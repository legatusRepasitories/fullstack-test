<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>ru.it.pro</groupId>
    <artifactId>fullstack-test</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>fullstack-test</name>
    <description>Test project for ProIT</description>

    <properties>
        <java.version>11</java.version>
        <skip.db.creation>false</skip.db.creation>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jooq</artifactId>
            <version>2.2.5.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.10</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
            <version>2.2.5.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.12</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>


    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>app/**</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>


            <!-- prepare frontend -->
            <plugin>

                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.9.1</version>

                <configuration>
                    <workingDirectory>src/main/resources/app</workingDirectory>
                </configuration>

                <executions>

                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->
                            <nodeVersion>v12.16.1</nodeVersion>
                            <npmVersion>6.13.4</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>webpack-build</id>
                        <goals><goal>npm</goal></goals>
                        <configuration>
                            <arguments>run dev</arguments>
                        </configuration>
                    </execution>

                </executions>

            </plugin>

            <!-- Read properties -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <id>read</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>src/main/resources/application.properties</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>

                <!-- Skip DB creation if the value of the skip.db.creation property is true -->
                <configuration>
                    <skip>${skip.db.creation}</skip>
                </configuration>

                <executions>
                    <!-- Execute SQL statements to the configured database -->
                    <execution>
                        <id>create-populate-database</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <!-- Configure the database connection -->
                            <driver>${spring.datasource.driver-class-name}</driver>
                            <url>${spring.datasource.url}</url>
                            <username>${spring.datasource.username}</username>
                            <password>${spring.datasource.password}</password>

                            <!-- Ensure that our changes are committed automatically -->
                            <autocommit>true</autocommit>
                            <!-- Configure the location of the invoked SQL script -->
                            <srcFiles>
                                <srcFile>src/main/resources/db/createTables.sql</srcFile>
                                <srcFile>src/main/resources/db/populateTables.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>42.2.10</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>3.12.4</version>

                <executions>
                    <!-- Generate the required class from the database -->
                    <execution>
                        <id>generate-postgres</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>

                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>42.2.10</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <!-- Configure the database connection -->
                    <jdbc>
                        <driver>${spring.datasource.driver-class-name}</driver>
                        <url>${spring.datasource.url}</url>
                        <user>${spring.datasource.username}</user>
                        <password>${spring.datasource.password}</password>
                    </jdbc>

                    <generator>
                        <database>
                            <!-- Include all tables found from the PUBLIC schema -->
                            <includes>.*</includes>
                            <excludes></excludes>
                            <!--                            <inputCatalog>public</inputCatalog>-->
                            <inputSchema>public</inputSchema>
                        </database>
                        <!-- Generate classes for tables and records -->
                        <generate>
                            <records>true</records>
                        </generate>
                        <!-- Configure the target package and directory -->
                        <target>
                            <packageName>ru.it.pro.fullstacktest.jooq.db</packageName>
                            <directory>target/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
